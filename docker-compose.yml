version: "3.8"

services:
  neo4j:
    image: neo4j:5.26.4
    container_name: neo4j
    restart: always
    environment:
      - NEO4J_AUTH=${NEO4J_LOCAL_USERNAME}/${NEO4J_LOCAL_PASSWORD}
    ports:
      - "7687:7687"
      - "7474:7474"
    volumes:
      - ~/neo4j/data:/data
    networks:
      - backend

  api:
    build: .
    container_name: alumni-api
    restart: always
    depends_on:
      - neo4j
    environment:
      - DB_ENV=${DB_ENV}
      - NEO4J_LOCAL_URI=${NEO4J_LOCAL_URI}
      - NEO4J_LOCAL_USERNAME=${NEO4J_LOCAL_USERNAME}
      - NEO4J_LOCAL_PASSWORD=${NEO4J_LOCAL_PASSWORD}
      - NEO4J_AURA_URI=${NEO4J_AURA_URI}
      - NEO4J_AURA_USERNAME=${NEO4J_AURA_USERNAME}
      - NEO4J_AURA_PASSWORD=${NEO4J_AURA_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - AES_ENCRYPTION_KEY=${AES_ENCRYPTION_KEY}
      - PORT=${PORT}
      - ENV=${ENV}
    ports:
      - "8080:8080"
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - backend


volumes:
  neo4j_data:

networks:
  backend:
    driver: bridge
